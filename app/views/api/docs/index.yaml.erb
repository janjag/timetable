openapi: 3.0.1
servers:
  - url: <%= [request.protocol, request.host_with_port, '/api'].join %>
tags:
  - name: Session

paths:
  /users/sign_in:
    post:
      tags:
        - Session
      requestBody:
        content:
          application/json:
            schema:
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  example: password
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - first_name
                  - last_name
                  - token
                  - is_leader
                  - admin
                  - manger
                  - staff_manager
                properties:
                  id:
                    type: integer
                    example: 1
                  first_name:
                    type: string
                    example: John
                  last_name:
                    type: string
                    example: Smith
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiJ9.eyJpZCI6NH0.P3BMpG0CHZArdYBrzWHxuu7zQlT4j9WZNY0qkqtxmJ0
                  is_leader:
                    type: boolean
                    example: false
                  admin:
                    type: boolean
                    example: false
                  manager:
                    type: boolean
                    example: false
                    required: true
                  staff_manager:
                    type: boolean
                    example: false
        422:
          content:
            application/json:
              schema:
                type: object
  /projects:
    get:
      tags:
        - Projects
      security:
        - authentication: []
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - project_id
                    - name
                    - color
                  properties:
                    id:
                      type: integer
                      example: 1
                    project_id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Project
                    color:
                      type: string
                      example: 08e51a
                    user:
                      type: object
                      required:
                        - name
                      properties:
                        name:
                          type: string
                          example: John Smith
                    leader:
                      type: object
                      required:
                        - name
                      properties:
                        name:
                          type: string
                          example: John Smith
  /work_times:
    get:
      tags:
        - Work times
      security:
        - authentication: []
      parameters:
        - name: project_id
          in: query
          schema:
            type: integer
        - name: from
          in: query
          schema:
            type: string
            example: "2020-03-01T00:00:00.000Z"
        - name: to
          in: query
          schema:
            type: string
            example: "2020-03-31T23:59:59.000Z"
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkTime'
    post:
      tags:
        - Work times
      security:
        - authentication: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - project_id
                - starts_at
                - ends_at
              properties:
                project_id:
                  type: integer
                  example: 2
                body:
                  type: string
                  example: My work
                task:
                  type: string
                  example: https//jira.com/TASK-XXX
                tag:
                  type: string
                  example: dev
                  default: dev
                  enum: ['dev', 'im', 'cc', 'res']
                starts_at:
                  type: string
                  example: "2020-03-04T08:00:00.000Z"
                ends_at:
                  type: string
                  example: "2020-03-04T010:00:00.000Z"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTime'
  /work_times/create_filling_gaps:
    post:
      tags:
        - Work times
      security:
        - authentication: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - project_id
                - starts_at
                - ends_at
              properties:
                project_id:
                  type: integer
                  example: 2
                body:
                  type: string
                  example: My work
                task:
                  type: string
                  example: https//jira.com/TASK-XXX
                tag:
                  type: string
                  example: dev
                  default: dev
                  enum: ['dev', 'im', 'cc', 'res']
                starts_at:
                  type: string
                  example: "2020-03-04T08:00:00.000Z"
                ends_at:
                  type: string
                  example: "2020-03-04T010:00:00.000Z"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTime'
  /work_times/{id}:
    put:
      tags:
        - Work times
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              required:
                - project_id
                - starts_at
                - ends_at
              properties:
                project_id:
                  type: integer
                  example: 2
                body:
                  type: string
                  example: My work
                task:
                  type: string
                  example: https//jira.com/TASK-XXX
                tag:
                  type: string
                  example: dev
                  default: dev
                  enum: ['dev', 'im', 'cc', 'res']
                starts_at:
                  type: string
                  example: "2020-03-04T08:00:00.000Z"
                ends_at:
                  type: string
                  example: "2020-03-04T010:00:00.000Z"
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkTime'
    delete:
      tags:
        - Work times
      security:
        - authentication: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description:
components:
  schemas:
    WorkTime:
      type: object
      required:
        - id
        - updated_by_admin
        - project_id
        - starts_at
        - ends_at
        - duration
        - tag
        - user_id
        - date
        - project
      properties:
        id:
          type: integer
          example: 1
        updated_by_admin:
          type: boolean
          example: false
        project_id:
          type: integer
          example: 2
        starts_at:
          type: string
          example: "2020-03-04T08:00:00.000Z"
        ends_at:
          type: string
          example: "2020-03-04T010:00:00.000Z"
        duration:
          type: integer
          example: 7200
        body:
          type: string
          example: My work
        task:
          type: string
          example: https//jira.com/TASK-XXX
        tag:
          type: string
          example: dev
          default: dev
          description: dev - default value for development work time. im - internal metting. cc - client communication. res - research.
          enum: ['dev', 'im', 'cc', 'res']
        task_preview:
          type: string
          example: TASK-XXX
        user_id:
          type: integer
          example: 1
        date:
          type: string
          example: "2020-03-04"
        project:
          type: object
          required:
            - id
            - name
            - color
            - work_times_allows_task
            - lunch
            - count_duration
            - taggable
          properties:
            id:
              type: integer
              example: 2
            name:
              type: string
              example: Foo
            color:
              type: string
              example: 08e51a
            work_times_allows_task:
              type: boolean
              example: true
            lunch:
              type: boolean
              example: false
            count_duration:
              type: boolean
              example: true
            taggable:
              type: boolean
              example: true
  securitySchemes:
    authentication:
      type: apiKey
      name: token
      in: header